{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"kra",
				"krakenEnabled_"
			],
			[
				"kraken",
				"krakenExists"
			],
			[
				"Kraken",
				"KrakenAdapter"
			],
			[
				"krak",
				"krakenDb"
			],
			[
				"chi",
				"childPID"
			],
			[
				"binary",
				"binaryPath"
			],
			[
				"clst",
				"clustDataLabels"
			],
			[
				"twoc",
				"twoClustersLabels"
			],
			[
				"inlin",
				"inline-block"
			],
			[
				"back",
				"background"
			],
			[
				"run",
				"runtime_error"
			],
			[
				"output",
				"outputDir"
			],
			[
				"ps",
				"push_back"
			],
			[
				"class",
				"classification"
			],
			[
				"con",
				"contigs"
			],
			[
				"res",
				"resConnComponents"
			],
			[
				"selec",
				"selectedData"
			],
			[
				"krake",
				"krakenNumUnknown"
			],
			[
				"boots",
				"bootstraps"
			],
			[
				"boot",
				"bootstraps"
			],
			[
				"out",
				"outputDir"
			],
			[
				"Clu",
				"ClusterAnalysisResult"
			],
			[
				"refer",
				"referenceLabels"
			],
			[
				"lbl",
				"lblTo"
			],
			[
				"ref",
				"referenceLabels"
			],
			[
				"shown",
				"shownLabels"
			],
			[
				"us",
				"unsigned"
			],
			[
				"Matr",
				"MatrixXd"
			],
			[
				"bootst",
				"bootstrapIndexes"
			],
			[
				"Seq",
				"SequenceVectorizationResult"
			],
			[
				"mutu",
				"mutualLabels"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 173.0,
		"last_filter": "reind",
		"selected_items":
		[
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"syn c",
				"Set Syntax: C"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/mlux/data/contamination_detection/acdc"
	],
	"file_history":
	[
		"/C/Users/mlux/data/contamination_detection/acdc/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/share/acdc/assets/index.html",
		"/C/Users/mlux/data/contamination_detection/acdc/src/main.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/share/acdc/assets/functions.js",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/script.js",
		"/C/Users/mlux/data/contamination_detection/acdc/src/ResultIO.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/ResultIO.h",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/index.html",
		"/C/Users/mlux/data/contamination_detection/acdc/src/KrakenAdapter.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/KrakenAdapter.h",
		"/C/Users/mlux/data/contamination_detection/acdc/README.md",
		"/C/Users/mlux/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/mlux/data/contamination_detection/acdc/.gitignore",
		"/C/Users/mlux/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/mlux/data/contamination_detection/acdc/acdc.sublime-project",
		"/C/Users/mlux/data/contamination_detection/acdc/test/TarjansAlgorithm.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/test/DipStatistic.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Opts.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/test/SequenceVectorizer.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/test/testmain.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Opts.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libdip/dip.c",
		"/C/Users/mlux/data/contamination_detection/acdc/src/BarnesHutSNEAdapter.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/libtsne/sptree.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/LICENSE",
		"/C/Users/mlux/data/contamination_detection/acdc/libdip/DipStatistic.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/MatrixUtil.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/SequenceUtil.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/MatrixUtil.h",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Logger.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/ClusterAnalysis.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/IOUtil.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Clustering.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Clustering.h",
		"/C/Users/mlux/data/contamination_detection/acdc/test/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/data/twoclusters.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/src/ClusterAnalysis.h",
		"/C/Users/mlux/data/contamination_detection/acdc/data/threeclusters.labels.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/data/threeclusters.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/data/twoclusters.labels.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/src/TarjansAlgorithm.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/data/bimodal.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/data/unimodal.txt",
		"/C/Users/mlux/data/contamination_detection/acdc/src/BarnesHutSNEAdapter.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/seq_io/fasta_fastq.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/stream/guess_format.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/stream/formatted_file.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/basic/basic_stream.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/arg_parse/argument_parser.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/stream/stream_base.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/file/file_interface.h",
		"/C/Users/mlux/Desktop/result_simulated/functions.js",
		"/C/Users/mlux/Desktop/result_simulated/style.css",
		"/C/Users/mlux/Desktop/result_simulated/script.js",
		"/C/Users/mlux/Desktop/result_simulated/index.html",
		"/C/Users/mlux/data/contamination_detection/acdc/src/IOUtil.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/seq_io.h",
		"/C/Users/mlux/data/contamination_detection/acdc/src/SequenceVectorizer.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/sequence.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/seq_io/sequence_file.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/store/store_io.h",
		"/C/Users/mlux/data/contamination_detection/acdc/libseqan/seqan/basic.h",
		"/C/Users/mlux/data/contamination_detection/acdc/src/SequenceVectorizer.h",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Util.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/MLUtil.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/MLUtil.h",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Util.h",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Util.tpp",
		"/C/Users/mlux/data/contamination_detection/acdc/src/SequenceUtil.h",
		"/C/Users/mlux/data/contamination_detection/acdc/run-kraken.sh",
		"/C/Users/mlux/data/contamination_detection/acdc/src/Logger.h",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/style.css",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/functions.js",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/data.js",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/export/2-kraken-0.fasta",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/export/2-kraken-2.fasta",
		"/C/Users/mlux/data/contamination_detection/acdc/build/results/export/1-kraken-1.fasta",
		"/C/Users/mlux/data/contamination_detection/acdc/src/VisualizationServer.cpp",
		"/C/Users/mlux/data/contamination_detection/acdc/assets/script.js",
		"/C/Users/mlux/data/contamination_detection/tool/build/results/index.html",
		"/C/Users/mlux/data/contamination_detection/tool/build/results/script.js",
		"/C/Users/mlux/data/contamination_detection/tool/build/results/functions.js",
		"/C/Users/mlux/data/contamination_detection/tool/build/results/style.css",
		"/C/Users/mlux/data/contamination_detection/tool/data/bimodal.txt",
		"/C/Users/mlux/data/contamination_detection/tool/assets/script.js",
		"/C/Users/mlux/data/contamination_detection/tool/src/Util.cpp",
		"/C/Users/mlux/data/contamination_detection/tool/assets/index.html",
		"/C/Users/mlux/data/contamination_detection/tool/src/Util.h",
		"/C/Users/mlux/data/contamination_detection/tool/src/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/tool/src/ResultIO.cpp",
		"/C/Users/mlux/data/contamination_detection/tool/src/main.cpp",
		"/C/Users/mlux/data/contamination_detection/tool/banner.txt",
		"/C/Users/mlux/data/contamination_detection/tool/build/results/0.js",
		"/C/Users/mlux/data/contamination_detection/tool/src/KrakenAdapter.cpp",
		"/C/Users/mlux/data/contamination_detection/tool/build/results/meh.html",
		"/C/Users/mlux/data/contamination_detection/tool/build/results/d3-tip.js",
		"/C/Users/mlux/AppData/Local/Temp/7zO4F1AE94D/README.md",
		"/C/Users/mlux/data/contamination_detection/tool/src/nanoflann.hpp",
		"/C/Users/mlux/data/contamination_detection/tool/test/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/tool/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/tool/libtsne/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/tool/libdip/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/tool/libjsoncpp/CMakeLists.txt",
		"/C/Users/mlux/data/contamination_detection/tool/libseqan/CMakeLists.txt",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/VisualizationServer.cpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/Opts.cpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/Opts.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/main.cpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/ResultIO.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/ResultIO.cpp",
		"/C/Users/mlux/data/notes.txt",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/Util.cpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/Util.tpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/Util.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/Clustering.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/ClusterAnalysis.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/ClusterAnalysis.cpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/KrakenAdapter.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/KrakenAdapter.cpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/CMakeLists.txt",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/CMakeLists.txt",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/libjsoncpp/CMakeLists.txt",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/VisualizationServer.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/libdip/CMakeLists.txt",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/BarnesHutSNEAdapter.h",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/src/Clustering.cpp",
		"/C/Users/mlux/data/documents/didy/contamination_detection/tool/libwebserver/WebServer.h"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"kraken",
			"krakenCommand",
			"2",
			"\"\\n\"",
			" ...",
			"ILOG.flush()",
			"Out",
			"pipefdOut",
			"pipefd",
			" ...",
			"err",
			"out",
			"err",
			"out",
			"1",
			"; ILOG.flush()",
			"\"\\n\"",
			"1",
			"child_pid",
			"tpid",
			"childStatus",
			"\"\\n\"",
			"../data",
			"exec",
			"binaryPath",
			"full_path",
			"fs::",
			"helpDesc",
			"PROJECT_SOURCE_DIR",
			"INSTALL",
			"3",
			"2",
			"1",
			"twoClusters",
			"2",
			"1",
			"	",
			"FileExtensions",
			"guessFormatFromFilename",
			"unknownex",
			"UnknownExtensionError",
			" ,",
			"bold",
			"setBoldExclusively",
			"setActiveExclusively",
			"setBoldExclusively",
			"15px",
			"#condidences",
			"background",
			"80px",
			"style=\"background-color:",
			"LOG",
			"cerr",
			"is_regular_file",
			"ThreadPool",
			"Logger",
			"Util::",
			"filterfa",
			"Util::",
			"MatrixUtil",
			"MatrixUtil::",
			"MatrixUtil",
			"stratifiedSubsamplingIndices",
			"numericLabels",
			"T",
			"IO",
			"Util::",
			"Util",
			"estimateTsnePerplexity",
			"Util::",
			"util::",
			"Util::",
			"matrixr",
			"Util::",
			"krakenCommand",
			"ILOG",
			"DLOG",
			"fname",
			"krakenOut",
			"krakenCommand",
			"f1",
			"file",
			"f1",
			"file",
			"krakenScript",
			"_krakenScript",
			"div",
			"span",
			"append",
			"colors",
			"updateExport();",
			"a",
			"colors",
			"outPath",
			"ResultIO::",
			"static ",
			"contigIdsCC",
			"fastaLabels",
			"dataLabels",
			"pre",
			"Id",
			"consol",
			"var fasta",
			"html",
			"clusAnalResult",
			"sne",
			"fasta",
			"500, 500, 25",
			"dataset",
			"cc",
			"connComponents",
			"/= n",
			"resConnComponents",
			"connComponents",
			"oneshot",
			"w",
			"dataset",
			"bold",
			"/",
			" /",
			"-",
			"/",
			" + padding",
			"max",
			"rootPath",
			"ResultIO::getInstance()",
			"ConnComponents",
			"stati"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"2",
			"1",
			"0",
			"1",
			"0",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "acdc.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cma",
				"CMakeLists.txt"
			],
			[
				"scr",
				"build\\results\\script.js"
			],
			[
				"resio",
				"src\\ResultIO.cpp"
			],
			[
				"res",
				"src\\ResultIO.h"
			],
			[
				"main",
				"src\\main.cpp"
			],
			[
				"inde",
				"share\\acdc\\assets\\index.html"
			],
			[
				"func",
				"share\\acdc\\assets\\functions.js"
			],
			[
				"resuio",
				"src\\ResultIO.cpp"
			],
			[
				"read",
				"README.md"
			],
			[
				"kraka",
				"src\\KrakenAdapter.h"
			],
			[
				"krake",
				"src\\KrakenAdapter.cpp"
			],
			[
				"krak",
				"src\\KrakenAdapter.cpp"
			],
			[
				"mai",
				"src\\main.cpp"
			],
			[
				"cmak",
				"CMakeLists.txt"
			],
			[
				"opts",
				"src\\Opts.cpp"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"fastafas",
				"libseqan\\seqan\\seq_io\\fasta_fastq.h"
			],
			[
				"basics",
				"libseqan\\seqan\\basic\\basic_stream.h"
			],
			[
				"argum",
				"libseqan\\seqan\\arg_parse\\argument_parser.h"
			],
			[
				"stremb",
				"libseqan\\seqan\\stream\\stream_base.h"
			],
			[
				"guesf",
				"libseqan\\seqan\\stream\\guess_format.h"
			],
			[
				"formfi",
				"libseqan\\seqan\\stream\\formatted_file.h"
			],
			[
				"filei",
				"libseqan\\seqan\\file\\file_interface.h"
			],
			[
				"iout",
				"src\\IOUtil.h"
			],
			[
				"logg",
				"src\\Logger.cpp"
			],
			[
				"o",
				"src\\Opts.cpp"
			],
			[
				"resu",
				"src\\ResultIO.cpp"
			],
			[
				"iou",
				"src\\IOUtil.cpp"
			],
			[
				"sequ",
				"src\\SequenceVectorizer.h"
			],
			[
				"sequeve",
				"src\\SequenceVectorizer.cpp"
			],
			[
				"clusa",
				"src\\ClusterAnalysis.cpp"
			],
			[
				"mlu",
				"src\\MLUtil.cpp"
			],
			[
				"mlut",
				"src\\MLUtil.cpp"
			],
			[
				"matrixu",
				"src\\MatrixUtil.h"
			],
			[
				"matrix",
				"src\\MatrixUtil.h"
			],
			[
				"mainc",
				"src\\main.cpp"
			],
			[
				"optsc",
				"src\\Opts.cpp"
			],
			[
				"disp",
				"test\\DipStatistic.cpp"
			],
			[
				"bar",
				"src\\BarnesHutSNEAdapter.h"
			],
			[
				"barn",
				"src\\BarnesHutSNEAdapter.cpp"
			],
			[
				"clusc",
				"src\\Clustering.cpp"
			],
			[
				"sequv",
				"src\\SequenceVectorizer.cpp"
			],
			[
				"utic",
				"src\\Util.cpp"
			],
			[
				"log",
				"src\\Logger.cpp"
			],
			[
				"logh",
				"src\\Logger.h"
			],
			[
				"uti",
				"src\\Util.cpp"
			],
			[
				"opt",
				"src\\Opts.cpp"
			],
			[
				"op",
				"src\\Opts.cpp"
			],
			[
				"visu",
				"src\\VisualizationServer.cpp"
			],
			[
				"util",
				"src\\Util.h"
			],
			[
				"resui",
				"src\\ResultIO.h"
			],
			[
				"utilh",
				"src\\Util.h"
			],
			[
				"ind",
				"assets\\index.html"
			],
			[
				"0.",
				"build\\results\\0.js"
			],
			[
				"krakea",
				"src\\KrakenAdapter.cpp"
			],
			[
				"styl",
				"build\\results\\style.css"
			],
			[
				"0",
				"build\\results\\0.js"
			],
			[
				"0js",
				"build\\results\\0.js"
			],
			[
				"nanofl",
				"src\\nanoflann.hpp"
			],
			[
				"seqcma",
				"libseqan\\CMakeLists.txt"
			],
			[
				"uilh",
				"src\\Util.h"
			],
			[
				"utih",
				"src\\Util.h"
			],
			[
				"vissh",
				"src\\VisualizationServer.h"
			],
			[
				"visse",
				"src\\VisualizationServer.cpp"
			],
			[
				"v",
				"src\\VisualizationServer.cpp"
			],
			[
				"visser",
				"src\\VisualizationServer.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 291.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
